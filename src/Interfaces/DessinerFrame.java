package Interfaces;

import Dessiner.Arete;
import Dessiner.PanelDessin;
import java.awt.*;
import java.awt.Event.*;
import Dessiner.Sommet;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Elie Abboud
 */
public class DessinerFrame extends javax.swing.JFrame {

    //déclaration des variables
    public static PanelDessin panelDessin = new PanelDessin();
    private int labelSommet = 0;

    /**
     * Creates new form DessinerFrame
     */
    public DessinerFrame() {
        initComponents();
        this.setLocationRelativeTo(null);//pour mettre le frame au milieu de notre écran
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuCouleur = new javax.swing.JMenu();
        jMenuItemBleu = new javax.swing.JMenuItem();
        jMenuItemRouge = new javax.swing.JMenuItem();
        jMenuItemGris = new javax.swing.JMenuItem();
        DessinerJpanel = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        MenuBoutton = new javax.swing.JButton();
        ActionsBoutton = new javax.swing.JButton();
        EffacerToutBoutton = new javax.swing.JButton();
        jButtonZoomOut = new javax.swing.JButton();
        jButtonZoomIn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuOpen = new javax.swing.JMenuItem();
        jMenuSave = new javax.swing.JMenuItem();
        jMenuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jCheckBoxMenuItemBleu = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemRouge = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItemGris = new javax.swing.JCheckBoxMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItemCarre = new javax.swing.JMenuItem();
        jMenuItemCercle = new javax.swing.JMenuItem();
        jMenuItemRect = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItem2 = new javax.swing.JRadioButtonMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu10 = new javax.swing.JMenu();

        jMenuCouleur.setText("jMenu3");

        jMenuItemBleu.setText("jMenuItem1");
        jMenuItemBleu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBleuActionPerformed(evt);
            }
        });
        jMenuCouleur.add(jMenuItemBleu);

        jMenuItemRouge.setText("jMenuItem2");
        jMenuCouleur.add(jMenuItemRouge);

        jMenuItemGris.setText("jMenuItem1");
        jMenuCouleur.add(jMenuItemGris);

        jPopupMenu1.add(jMenuCouleur);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(" Dessiner");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        DessinerJpanel.setBackground(new java.awt.Color(255, 255, 255));
        DessinerJpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        DessinerJpanel.setAutoscrolls(true);
        DessinerJpanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                DessinerJpanelMouseWheelMoved(evt);
            }
        });
        DessinerJpanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DessinerJpanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DessinerJpanelMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DessinerJpanelMousePressed(evt);
            }
        });
        DessinerJpanel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                DessinerJpanelComponentAdded(evt);
            }
        });
        DessinerJpanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DessinerJpanelFocusGained(evt);
            }
        });
        DessinerJpanel.setLayout(new java.awt.CardLayout());

        jToolBar1.setRollover(true);

        MenuBoutton.setText("Menu");
        MenuBoutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuBouttonActionPerformed(evt);
            }
        });
        jToolBar1.add(MenuBoutton);

        ActionsBoutton.setText("Actions");
        ActionsBoutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionsBouttonActionPerformed(evt);
            }
        });
        jToolBar1.add(ActionsBoutton);

        EffacerToutBoutton.setText("Effacer Tout");
        EffacerToutBoutton.setFocusable(false);
        EffacerToutBoutton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EffacerToutBoutton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EffacerToutBoutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EffacerToutBouttonActionPerformed(evt);
            }
        });
        jToolBar1.add(EffacerToutBoutton);

        jButtonZoomOut.setText("zoom out (-)");
        jButtonZoomOut.setFocusable(false);
        jButtonZoomOut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonZoomOut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZoomOutActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonZoomOut);

        jButtonZoomIn.setText("zoom in (+)");
        jButtonZoomIn.setFocusable(false);
        jButtonZoomIn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonZoomIn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZoomInActionPerformed(evt);
            }
        });
        jToolBar1.add(jButtonZoomIn);

        jMenu1.setText("File");

        jMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpen.setText("Open");
        jMenu1.add(jMenuOpen);

        jMenuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuSave.setText("Save");
        jMenu1.add(jMenuSave);

        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.add(jSeparator1);

        jMenu.setText("Sommets");

        jMenu5.setText("Couleur");

        jCheckBoxMenuItemBleu.setText("Bleu");
        jCheckBoxMenuItemBleu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemBleuActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItemBleu);

        jCheckBoxMenuItemRouge.setText("Rouge");
        jCheckBoxMenuItemRouge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemRougeActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItemRouge);

        jCheckBoxMenuItemGris.setSelected(true);
        jCheckBoxMenuItemGris.setText("Gris");
        jCheckBoxMenuItemGris.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItemGrisActionPerformed(evt);
            }
        });
        jMenu5.add(jCheckBoxMenuItemGris);

        jMenu.add(jMenu5);

        jMenu6.setText("Forme");

        jMenuItemCarre.setText("Carré");
        jMenuItemCarre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCarreActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItemCarre);

        jMenuItemCercle.setText("Cercle");
        jMenuItemCercle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCercleActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItemCercle);

        jMenuItemRect.setText("Rectangle");
        jMenuItemRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRectActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItemRect);

        jMenu.add(jMenu6);

        jMenu7.setText("Remplis");

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("Oui");
        jMenu7.add(jRadioButtonMenuItem1);

        jRadioButtonMenuItem2.setSelected(true);
        jRadioButtonMenuItem2.setText("Non");
        jRadioButtonMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem2ActionPerformed(evt);
            }
        });
        jMenu7.add(jRadioButtonMenuItem2);

        jMenu.add(jMenu7);

        jMenu2.add(jMenu);
        jMenu2.add(jSeparator2);

        jMenu8.setText("Aretes");

        jMenu9.setText("Forme");

        jMenuItem9.setText("Ligne droite");
        jMenu9.add(jMenuItem9);

        jMenuItem10.setText("Arc");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu9.add(jMenuItem10);

        jMenu8.add(jMenu9);

        jMenu10.setText("jMenu10");
        jMenu8.add(jMenu10);

        jMenu2.add(jMenu8);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DessinerJpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DessinerJpanel, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*on ouvre le frame ActionFrame quand on clique sur le boutton ActionsBoutton,
     pour afficher le frame il faut toujours utiliser la méthode setVisible(true)*/
    private void ActionsBouttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionsBouttonActionPerformed
        ActionFrame actionF = new ActionFrame();
        actionF.setVisible(true);
    }//GEN-LAST:event_ActionsBouttonActionPerformed

    /*on ferme le frame "DessinerFrame" quand on presse sur le boutton Menu ce qui nous ramène au 
     menu principal "Welcome Frame" */
    private void MenuBouttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuBouttonActionPerformed
        this.dispose();
    }//GEN-LAST:event_MenuBouttonActionPerformed

    private void DessinerJpanelComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_DessinerJpanelComponentAdded
    }//GEN-LAST:event_DessinerJpanelComponentAdded

    private void DessinerJpanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DessinerJpanelFocusGained
    }//GEN-LAST:event_DessinerJpanelFocusGained

    //cette methode verifie quand le curseur entre dans le panel "DessinerJpanel"
    private void DessinerJpanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DessinerJpanelMouseEntered
        DessinerJpanel.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_DessinerJpanelMouseEntered

    /*quand on clique sur un endroit précis du Jpanel on pourra dessiner un sommet à cet endroit
     donc on crée un nouveau objet comme rectangle et on appelle la méthode addRect(rectangle)
     de la classe "PanelDessin" à la fin on ajoute l'instance panelDessin à notre Panel qui est 
     fixe et qui s'appelle "DessinerJpanel". on dessine un Rectangle, un Cercle ou un Carre et ca 
     dépend du choix, par défaut c'est un rectangle gris. la variable "forme" dans "panelDessin" 
     nous indique quel est la forme choisie*/
    private void DessinerJpanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DessinerJpanelMouseClicked
        int x = evt.getX();
        int y = evt.getY();
        int dx = 30;
        int dy = 25;

        if (panelDessin.sommets.size() > 0) {
            for (Sommet sommet : panelDessin.sommets) {

                /*si on clique à l'intérieur d'un sommet on le choisit, si on clique droit on aura
                 * un popup menu qui nous permettra de modifier ce sommet ou par exemple l'effacer.
                 */

                if (evt.getX() >= sommet.x && evt.getX() <= sommet.x + sommet.dx && evt.getY() >= sommet.y && evt.getY() <= sommet.y + sommet.dy) {
                    if (SwingUtilities.isLeftMouseButton(evt)) {
                        panelDessin.dessinArete(sommet);
                    }
                    if (SwingUtilities.isRightMouseButton(evt)) {
                        PopUpMenu popUp = new PopUpMenu(panelDessin, evt.getX(), evt.getY());
                        popUp.choisirMI(sommet); //cette méthode est pour prendre une action corresspondante quand on choisit un menu item
                    }
                    return;
                }//fin clique dans le sommet
            }//fin boucle for
        }//fin if qui teste si on a deja des sommets

        //avant de dessiner un sommet, il faut vider l'array qui stock les sommets qu'on a séléctionné avant
        if (!panelDessin.sommetsSelection.isEmpty()) {
            panelDessin.sommetsSelection.clear();
        }
        //incrémente le label, crée un nouveau sommet, l'ajoute à l'array
        if (SwingUtilities.isLeftMouseButton(evt)) {
            int lbl = ++this.labelSommet;
            Sommet sommet = new Sommet(x, y, dx, dy, panelDessin.couleur, panelDessin.forme, lbl);
            panelDessin.addSommet(sommet);
            this.DessinerJpanel.add(panelDessin);
            this.setVisible(true);
        }
    }//GEN-LAST:event_DessinerJpanelMouseClicked

    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void jRadioButtonMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem2ActionPerformed
    }//GEN-LAST:event_jRadioButtonMenuItem2ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    /*on appelle la méthode "modifierForme" qui changera la variable "forme" de la classe "PanelDessin" vers "Cercle". 
     puis on ajoute ce panelDessin au panel fixe "DessinerJpanel" de notre Frame*/
    private void jMenuItemCercleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCercleActionPerformed
        panelDessin.modifierForme("Cercle");
        this.DessinerJpanel.add(panelDessin);
        this.setVisible(true);
    }//GEN-LAST:event_jMenuItemCercleActionPerformed

    /*on appelle la méthode "modifierForme" qui changera la variable "forme" de la classe "PanelDessin" vers "Carre". 
     puis on ajoute ce panelDessin au panel fixe "DessinerJpanel" de notre Frame*/
    private void jMenuItemCarreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCarreActionPerformed
        panelDessin.modifierForme("Carre");
        this.DessinerJpanel.add(panelDessin);
        this.setVisible(true);
    }//GEN-LAST:event_jMenuItemCarreActionPerformed

    /*on appelle la méthode "modifierForme" qui changera la variable "forme" de la classe "PanelDessin" vers "Rectangle". 
     puis on ajoute ce panelDessin au panel fixe "DessinerJpanel" de notre Frame*/
    private void jMenuItemRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRectActionPerformed
        panelDessin.modifierForme("Rectangle");
        this.DessinerJpanel.add(panelDessin);
        this.setVisible(true);
    }//GEN-LAST:event_jMenuItemRectActionPerformed

    /* le programme nous demande si on est sûr d'effacer tout, si oui on appelle la 
     * méthode effacerTout() de la classe panelDessin
     */
    private void EffacerToutBouttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EffacerToutBouttonActionPerformed
        this.labelSommet = 0;
        int dialogResult = JOptionPane.showConfirmDialog(null, "êtes-vous sûr d'effacer tout?");
        if (dialogResult == JOptionPane.YES_OPTION) {
            panelDessin.effacerTout();
        }
    }//GEN-LAST:event_EffacerToutBouttonActionPerformed

    /*Si on clique sur le MenuItem Bleu on appelle la méthode "modifierCouleur" de
     la classe "panelDessin" avec évidemment le paramètre "BLUE" puis on ajoute ce "panelDessin"
     au panel fixe "DessinerJpanel" de notre Frame*/
    private void jCheckBoxMenuItemBleuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemBleuActionPerformed
        // TODO add your handling code here:
        this.jCheckBoxMenuItemRouge.setSelected(false);
        this.jCheckBoxMenuItemGris.setSelected(false);
        this.jCheckBoxMenuItemBleu.setSelected(true);
        panelDessin.modifierCouleur("BLUE");
        this.DessinerJpanel.add(panelDessin);
        this.setVisible(true);
    }//GEN-LAST:event_jCheckBoxMenuItemBleuActionPerformed

    /*Si on clique sur le MenuItem Rouge on appelle la méthode "modifierCouleur" de
     la classe panelDessin avec évidemment le paramètre "RED" puis on ajoute ce panelDessin
     au panel fixe "DessinerJpanel" de notre Frame*/
    private void jCheckBoxMenuItemRougeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemRougeActionPerformed
        // TODO add your handling code here:
        this.jCheckBoxMenuItemBleu.setSelected(false);
        this.jCheckBoxMenuItemGris.setSelected(false);
        this.jCheckBoxMenuItemRouge.setSelected(true);
        panelDessin.modifierCouleur("RED");
        this.DessinerJpanel.add(panelDessin);
        this.setVisible(true);
    }//GEN-LAST:event_jCheckBoxMenuItemRougeActionPerformed

    /*Si on clique sur le MenuItem Gris on appelle la méthode "modifierCouleur" de
     la classe panelDessin avec évidemment le paramètre "GRAY" puis on ajoute ce panelDessin
     au panel fixe "DessinerJpanel" de notre Frame */
    private void jCheckBoxMenuItemGrisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItemGrisActionPerformed
        // TODO add your handling code here:
        this.jCheckBoxMenuItemBleu.setSelected(false);
        this.jCheckBoxMenuItemRouge.setSelected(false);
        this.jCheckBoxMenuItemGris.setSelected(true);
        panelDessin.modifierCouleur("GRAY");
        this.DessinerJpanel.add(panelDessin);
        this.setVisible(true);
    }//GEN-LAST:event_jCheckBoxMenuItemGrisActionPerformed

    private void DessinerJpanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DessinerJpanelMousePressed
        //System.out.println("mouse pressed");
    }//GEN-LAST:event_DessinerJpanelMousePressed

    //pour le zooming en utilisant le boutton
    private void jButtonZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZoomOutActionPerformed
        Dimension dim = DessinerFrame.panelDessin.getSize();
        dim.setSize(dim.getWidth() * 0.95, dim.getHeight() * 0.95);
        panelDessin.setSize(dim);
        for (int i = 0; i < panelDessin.sommets.size(); i++) {
            Sommet st = panelDessin.sommets.get(i);
            st.x *= 0.95;
            st.y *= 0.95;
        }
        for (int i = 0; i < panelDessin.aretes.size(); i++) {
            Arete arete = panelDessin.aretes.get(i);
            arete.xStart *= 0.95;
            arete.yStart *= 0.95;
            arete.xEnd *= 0.95;
            arete.yEnd *= 0.95;
        }
    }//GEN-LAST:event_jButtonZoomOutActionPerformed

    //pour le zooming en utilisant le boutton
    private void jButtonZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZoomInActionPerformed
        Dimension dim = DessinerFrame.panelDessin.getSize();
        dim.setSize(dim.getWidth() * 1.05, dim.getHeight() * 1.05);
        panelDessin.setSize(dim);
        for (int i = 0; i < panelDessin.sommets.size(); i++) {
            Sommet st = panelDessin.sommets.get(i);
            st.x *= 1.05;
            st.y *= 1.05;
        }
        for (int i = 0; i < panelDessin.aretes.size(); i++) {
            Arete arete = panelDessin.aretes.get(i);
            arete.xStart *= 1.05;
            arete.yStart *= 1.05;
            arete.xEnd *= 1.05;
            arete.yEnd *= 1.05;
        }
    }//GEN-LAST:event_jButtonZoomInActionPerformed

    //pour le zooming en utilisant la roulette de la souris
    private void DessinerJpanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_DessinerJpanelMouseWheelMoved
        int wheelTrack = evt.getWheelRotation();
        //zoom in
        if (wheelTrack > 0) {
            Dimension dim = DessinerFrame.panelDessin.getSize();
            dim.setSize(dim.getWidth() * 1.05, dim.getHeight() * 1.05);
            panelDessin.setSize(dim);
            for (int i = 0; i < panelDessin.sommets.size(); i++) {
                Sommet st = panelDessin.sommets.get(i);
                st.x *= 1.05;
                st.y *= 1.05;
            }
            for (int i = 0; i < panelDessin.aretes.size(); i++) {
                Arete arete = panelDessin.aretes.get(i);
                arete.xStart *= 1.05;
                arete.yStart *= 1.05;
                arete.xEnd *= 1.05;
                arete.yEnd *= 1.05;
            }

        } else {
            //zoom out
            if (wheelTrack < 0) {
                Dimension dim = DessinerFrame.panelDessin.getSize();
                dim.setSize(dim.getWidth() * 0.95, dim.getHeight() * 0.95);
                panelDessin.setSize(dim);
                for (int i = 0; i < panelDessin.sommets.size(); i++) {
                    Sommet st = panelDessin.sommets.get(i);
                    st.x *= 0.95;
                    st.y *= 0.95;
                }
                for (int i = 0; i < panelDessin.aretes.size(); i++) {
                    Arete arete = panelDessin.aretes.get(i);
                    arete.xStart *= 0.95;
                    arete.yStart *= 0.95;
                    arete.xEnd *= 0.95;
                    arete.yEnd *= 0.95;
                }
            }
        }
    }//GEN-LAST:event_DessinerJpanelMouseWheelMoved

    private void jMenuItemBleuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBleuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemBleuActionPerformed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DessinerFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActionsBoutton;
    private javax.swing.JPanel DessinerJpanel;
    private javax.swing.JButton EffacerToutBoutton;
    private javax.swing.JButton MenuBoutton;
    private javax.swing.JButton jButtonZoomIn;
    private javax.swing.JButton jButtonZoomOut;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemBleu;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemGris;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItemRouge;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCouleur;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemBleu;
    private javax.swing.JMenuItem jMenuItemCarre;
    private javax.swing.JMenuItem jMenuItemCercle;
    private javax.swing.JMenuItem jMenuItemGris;
    private javax.swing.JMenuItem jMenuItemRect;
    private javax.swing.JMenuItem jMenuItemRouge;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JMenuItem jMenuSave;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
